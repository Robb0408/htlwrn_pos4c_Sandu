// <auto-generated />
using BestPrice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BestPrice.Data.Migrations
{
    [DbContext(typeof(BestPriceContext))]
    partial class BestPriceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BestPrice.Data.Model.Availability", b =>
                {
                    b.Property<int>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailabilityId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("AvailabilityId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VendorId");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("BestPrice.Data.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BestPrice.Data.Model.SpecialOffer", b =>
                {
                    b.Property<int>("SpecialOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialOfferId"));

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<int>("MinAmount")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("SpecialOfferId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VendorId");

                    b.ToTable("SpecialOffer");
                });

            modelBuilder.Entity("BestPrice.Data.Model.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VendorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("BestPrice.Data.Model.Availability", b =>
                {
                    b.HasOne("BestPrice.Data.Model.Product", "Product")
                        .WithMany("Availabilities")
                        .HasForeignKey("ProductId")
                        .IsRequired();

                    b.HasOne("BestPrice.Data.Model.Vendor", "Vendor")
                        .WithMany("Availabilities")
                        .HasForeignKey("VendorId")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("BestPrice.Data.Model.SpecialOffer", b =>
                {
                    b.HasOne("BestPrice.Data.Model.Product", "Product")
                        .WithMany("SpecialOffers")
                        .HasForeignKey("ProductId")
                        .IsRequired();

                    b.HasOne("BestPrice.Data.Model.Vendor", "Vendor")
                        .WithMany("SpecialOffers")
                        .HasForeignKey("VendorId")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("BestPrice.Data.Model.Product", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("SpecialOffers");
                });

            modelBuilder.Entity("BestPrice.Data.Model.Vendor", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("SpecialOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
