// <auto-generated />
using System;
using CashRegister.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashRegister.Api.Migrations
{
    [DbContext(typeof(CashRegisterContext))]
    [Migration("20240507084628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashRegister.Api.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "productName");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(6,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "unitPrice");

                    b.HasKey("ID");

                    b.ToTable("Product");

                    b.HasAnnotation("Relational:JsonPropertyName", "product");
                });

            modelBuilder.Entity("CashRegister.Api.Models.Receipt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ReceiptTimestamp")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "receiptTimestamp");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(6,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "totalPrice");

                    b.HasKey("ID");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("CashRegister.Api.Models.ReceiptLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(6,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "totalPrice");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReceiptID");

                    b.ToTable("ReceiptLine");

                    b.HasAnnotation("Relational:JsonPropertyName", "receiptLines");
                });

            modelBuilder.Entity("CashRegister.Api.Models.ReceiptLine", b =>
                {
                    b.HasOne("CashRegister.Api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashRegister.Api.Models.Receipt", null)
                        .WithMany("ReceiptLines")
                        .HasForeignKey("ReceiptID");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CashRegister.Api.Models.Receipt", b =>
                {
                    b.Navigation("ReceiptLines");
                });
#pragma warning restore 612, 618
        }
    }
}
